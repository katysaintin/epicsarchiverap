plugins {
	id "java-library"
    id "application"
    id "war"
	id "eclipse"
	//id "ca.cutterslade.analyze" version "1.9.2" // Analyzes dependancies for usage
	id 'com.palantir.git-version' version '3.0.0'
	id("com.diffplug.spotless") version "6.25.0" 
}

sourceSets {
	main {
		java {
			srcDir "src/main/"
		}
		resources {
			srcDirs = []
		}
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

ext {
    runTestsSequentially = findProperty('ARCHAPPL_SEQUENTIAL_TESTS') ?: false
}

// Allows: gradle -PprojVersion=X build
version project.findProperty('projVersion') ?: gitVersion() ?: "UnknownVersion"

def stageDir = layout.projectDirectory.file("build/stage")
def srcDir = layout.projectDirectory.file("src/main")
def libDir = layout.projectDirectory.file("lib")
def apiDocsDir = layout.projectDirectory.file("docs/api")
def archapplsite = System.getenv("ARCHAPPL_SITEID") ?: "tests"
def defaultsitespecificpath = "src/sitespecific/${archapplsite}"
// Allow the site to be outside of the repository
def sitespecificpath = (new File("${defaultsitespecificpath}").exists()) ? defaultsitespecificpath : archapplsite

ant.stage = stageDir
ant.archapplsite = archapplsite
ant.sitespecificpath = sitespecificpath
ant.importBuild("build.xml")

repositories {
	flatDir {
		name = "libs dir"
		dir file("lib")
	}
	flatDir {
		name = "test libs dir"
		dir file("lib/test")
	}
	mavenCentral()
	maven { url "https://clojars.org/repo" }
	ivy {
		url 'https://github.com/'

		patternLayout {
			artifact '/[organisation]/[module]/archive/[revision].[ext]'
		}

		// This is required in Gradle 6.0+ as metadata file (ivy.xml)
		// is mandatory. Docs linked below this code section
		metadataSources { artifact() }
	}
	
	maven { url 'https://jitpack.io' }
}


dependencies {
	// Local depencencies
	implementation files("lib/jamtio_071005.jar",
			"lib/redisnio_0.0.1.jar")
//	testImplementation("com.hubspot.jinjava:jinjava:2.7.0")
//	testImplementation files("lib/test/BPLTaglets.jar")
	//testImplementation(":pbrawclient:0.2.1")
	implementation 'com.github.katysaintin:pbrawclient:0_2_1_cea'
	// github
	//viewer("archiver-appliance:svg_viewer:v1.1.0@zip") // Not compileOnly to avoid check by analyze
	// Maven dependencies
//	testImplementation("org.seleniumhq.selenium:selenium-java:4.22.0")
//	testImplementation("org.seleniumhq.selenium:selenium-firefox-driver:4.22.0")
//	testImplementation("org.seleniumhq.selenium:selenium-support:4.22.0")
//	testImplementation("io.github.bonigarcia:webdrivermanager:5.9.1")
//	testImplementation("org.apache.commons:commons-compress:1.23.0")
//	testImplementation("org.junit.jupiter:junit-jupiter-params:5.9.3")
	implementation("org.apache.tomcat:tomcat-servlet-api:9.0.74")// Only needed for tests, but inbuilt to main)
	implementation("org.epics:jca:2.4.7")
	implementation('commons-codec:commons-codec:1.15')
	implementation('commons-fileupload:commons-fileupload:1.5')
	implementation('commons-io:commons-io:2.11.0')
	implementation("org.apache.commons:commons-lang3:3.12.0")
	implementation("org.apache.commons:commons-math3:3.6.1")
	implementation("commons-validator:commons-validator:1.7")
	implementation("com.google.guava:guava:31.1-jre")
	implementation("com.hazelcast:hazelcast:5.4.0")
	implementation("org.apache.httpcomponents:httpclient:4.5.14")
	implementation("org.apache.httpcomponents:httpcore:4.4.16")
	implementation("jdbm:jdbm:2.4") //clojar dependancy
	implementation("redis.clients:jedis:4.4.0")
	implementation("com.googlecode.json-simple:json-simple:1.1.1")
	implementation("org.python:jython-standalone:2.7.3")
	//runtimeOnly("org.apache.logging.log4j:log4j-1.2-api:2.20.0") // TODO remove log4j 1 from dependencies
	implementation("org.apache.logging.log4j:log4j-api:2.20.0")
	//implementation("org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0")
	//permitUnusedDeclared("org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0")
	implementation("org.apache.logging.log4j:log4j-jul:2.20.0")
	//permitUnusedDeclared("org.apache.logging.log4j:log4j-jul:2.20.0")
//	runtimeOnly("org.apache.logging.log4j:log4j-core:2.20.0")
//	runtimeOnly("org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0")
	implementation("com.lmax:disruptor:3.4.4") // Needed for async logging, needs to be in sync with log4j2
	//runtimeOnly("org.mariadb.jdbc:mariadb-java-client:3.3.3")
	implementation("com.opencsv:opencsv:5.7.1")
	implementation("com.google.protobuf:protobuf-java:3.23.0")
//	testImplementation("commons-cli:commons-cli:1.5.0")
//	testImplementation("org.junit.jupiter:junit-jupiter-api:5.2.0")
//	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.2.0")
//	testImplementation('org.awaitility:awaitility:4.2.0')
	implementation("org.phoebus:core-pva:4.7.2")
    //runtimeOnly("org.mariadb.jdbc:mariadb-java-client:3.1.4")
}

tasks.test {
  enabled = false
}

application {
    mainClass = 'org.epics.archiverappliance.mgmt.BPLServlet' 
}
